{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyPr8k3h+hVIwWXt4ei12Q4h",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/aniketsaini08/Logistic_breast_cancer/blob/main/logistic%20heart%20disease%20prediction%20\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.linear_model import LogisticRegression\n",
        "from sklearn.model_selection import train_test_split\n",
        "from sklearn.metrics import accuracy_score, ConfusionMatrixDisplay\n",
        "import pandas as pd\n",
        "from sklearn.preprocessing import StandardScaler\n",
        "import numpy as np\n",
        "import matplotlib.pyplot as plt"
      ],
      "metadata": {
        "id": "ISGfeC1_ngv5"
      },
      "execution_count": 232,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df = pd.read_csv('dataset.csv')\n",
        "df.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 226
        },
        "id": "PlCfifD3Ujoh",
        "outputId": "f10c05cb-dd10-4a22-b2df-7e814a7527d6"
      },
      "execution_count": 233,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   male  age  education  currentSmoker  cigsPerDay  BPMeds  prevalentStroke  \\\n",
              "0     1   39        4.0              0         0.0     0.0                0   \n",
              "1     0   46        2.0              0         0.0     0.0                0   \n",
              "2     1   48        1.0              1        20.0     0.0                0   \n",
              "3     0   61        3.0              1        30.0     0.0                0   \n",
              "4     0   46        3.0              1        23.0     0.0                0   \n",
              "\n",
              "   prevalentHyp  diabetes  totChol  sysBP  diaBP    BMI  heartRate  glucose  \\\n",
              "0             0         0    195.0  106.0   70.0  26.97       80.0     77.0   \n",
              "1             0         0    250.0  121.0   81.0  28.73       95.0     76.0   \n",
              "2             0         0    245.0  127.5   80.0  25.34       75.0     70.0   \n",
              "3             1         0    225.0  150.0   95.0  28.58       65.0    103.0   \n",
              "4             0         0    285.0  130.0   84.0  23.10       85.0     85.0   \n",
              "\n",
              "   TenYearCHD  \n",
              "0           0  \n",
              "1           0  \n",
              "2           0  \n",
              "3           1  \n",
              "4           0  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-6e870271-863e-45da-8fbd-66b172bcc5bb\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>male</th>\n",
              "      <th>age</th>\n",
              "      <th>education</th>\n",
              "      <th>currentSmoker</th>\n",
              "      <th>cigsPerDay</th>\n",
              "      <th>BPMeds</th>\n",
              "      <th>prevalentStroke</th>\n",
              "      <th>prevalentHyp</th>\n",
              "      <th>diabetes</th>\n",
              "      <th>totChol</th>\n",
              "      <th>sysBP</th>\n",
              "      <th>diaBP</th>\n",
              "      <th>BMI</th>\n",
              "      <th>heartRate</th>\n",
              "      <th>glucose</th>\n",
              "      <th>TenYearCHD</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>39</td>\n",
              "      <td>4.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>195.0</td>\n",
              "      <td>106.0</td>\n",
              "      <td>70.0</td>\n",
              "      <td>26.97</td>\n",
              "      <td>80.0</td>\n",
              "      <td>77.0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>0</td>\n",
              "      <td>46</td>\n",
              "      <td>2.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>250.0</td>\n",
              "      <td>121.0</td>\n",
              "      <td>81.0</td>\n",
              "      <td>28.73</td>\n",
              "      <td>95.0</td>\n",
              "      <td>76.0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>1</td>\n",
              "      <td>48</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1</td>\n",
              "      <td>20.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>245.0</td>\n",
              "      <td>127.5</td>\n",
              "      <td>80.0</td>\n",
              "      <td>25.34</td>\n",
              "      <td>75.0</td>\n",
              "      <td>70.0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>0</td>\n",
              "      <td>61</td>\n",
              "      <td>3.0</td>\n",
              "      <td>1</td>\n",
              "      <td>30.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>225.0</td>\n",
              "      <td>150.0</td>\n",
              "      <td>95.0</td>\n",
              "      <td>28.58</td>\n",
              "      <td>65.0</td>\n",
              "      <td>103.0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>0</td>\n",
              "      <td>46</td>\n",
              "      <td>3.0</td>\n",
              "      <td>1</td>\n",
              "      <td>23.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>285.0</td>\n",
              "      <td>130.0</td>\n",
              "      <td>84.0</td>\n",
              "      <td>23.10</td>\n",
              "      <td>85.0</td>\n",
              "      <td>85.0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6e870271-863e-45da-8fbd-66b172bcc5bb')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-6e870271-863e-45da-8fbd-66b172bcc5bb button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-6e870271-863e-45da-8fbd-66b172bcc5bb');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "    <div id=\"df-83e9c84e-bc6f-42cf-b22d-63adc3e4dc46\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-83e9c84e-bc6f-42cf-b22d-63adc3e4dc46')\"\n",
              "                title=\"Suggest charts\"\n",
              "                style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "      <script>\n",
              "        async function quickchart(key) {\n",
              "          const quickchartButtonEl =\n",
              "            document.querySelector('#' + key + ' button');\n",
              "          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "          quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "          try {\n",
              "            const charts = await google.colab.kernel.invokeFunction(\n",
              "                'suggestCharts', [key], {});\n",
              "          } catch (error) {\n",
              "            console.error('Error during call to suggestCharts:', error);\n",
              "          }\n",
              "          quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "        }\n",
              "        (() => {\n",
              "          let quickchartButtonEl =\n",
              "            document.querySelector('#df-83e9c84e-bc6f-42cf-b22d-63adc3e4dc46 button');\n",
              "          quickchartButtonEl.style.display =\n",
              "            google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "        })();\n",
              "      </script>\n",
              "    </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "df",
              "summary": "{\n  \"name\": \"df\",\n  \"rows\": 4238,\n  \"fields\": [\n    {\n      \"column\": \"male\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 8,\n        \"min\": 32,\n        \"max\": 70,\n        \"num_unique_values\": 39,\n        \"samples\": [\n          34,\n          70\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"education\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.0197906893121875,\n        \"min\": 1.0,\n        \"max\": 4.0,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          2.0,\n          3.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"currentSmoker\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"cigsPerDay\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 11.920093587827843,\n        \"min\": 0.0,\n        \"max\": 70.0,\n        \"num_unique_values\": 33,\n        \"samples\": [\n          19.0,\n          4.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"BPMeds\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.16958356790199888,\n        \"min\": 0.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1.0,\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"prevalentStroke\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"prevalentHyp\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"diabetes\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"totChol\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 44.590334318749434,\n        \"min\": 107.0,\n        \"max\": 696.0,\n        \"num_unique_values\": 248,\n        \"samples\": [\n          311.0,\n          205.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"sysBP\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 22.038096643544584,\n        \"min\": 83.5,\n        \"max\": 295.0,\n        \"num_unique_values\": 234,\n        \"samples\": [\n          109.0,\n          184.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"diaBP\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 11.91084960022547,\n        \"min\": 48.0,\n        \"max\": 142.5,\n        \"num_unique_values\": 146,\n        \"samples\": [\n          106.0,\n          108.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"BMI\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4.080111062409026,\n        \"min\": 15.54,\n        \"max\": 56.8,\n        \"num_unique_values\": 1363,\n        \"samples\": [\n          24.56,\n          19.87\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"heartRate\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 12.026596351612678,\n        \"min\": 44.0,\n        \"max\": 143.0,\n        \"num_unique_values\": 73,\n        \"samples\": [\n          85.0,\n          47.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"glucose\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 23.959998189237474,\n        \"min\": 40.0,\n        \"max\": 394.0,\n        \"num_unique_values\": 143,\n        \"samples\": [\n          394.0,\n          74.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"TenYearCHD\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 233
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.drop(columns='education',inplace =True)\n",
        "df=df[df['cigsPerDay'].notna()]\n",
        "df['BPMeds'].fillna(0,inplace=True)\n",
        "df=df[df['totChol'].notna()]\n",
        "df=df[df['BMI'].notna()]\n",
        "df=df[df['heartRate'].notna()]\n",
        "df['glucose'].fillna(df['glucose'].mean(),inplace=True)\n",
        "df.isna().sum()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 817
        },
        "id": "KmvPaEJdVwCN",
        "outputId": "a3b0d71a-791d-4321-da81-b1a9f1b756f6"
      },
      "execution_count": 234,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/tmp/ipython-input-2227010204.py:3: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.\n",
            "The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.\n",
            "\n",
            "For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.\n",
            "\n",
            "\n",
            "  df['BPMeds'].fillna(0,inplace=True)\n",
            "/tmp/ipython-input-2227010204.py:7: FutureWarning: A value is trying to be set on a copy of a DataFrame or Series through chained assignment using an inplace method.\n",
            "The behavior will change in pandas 3.0. This inplace method will never work because the intermediate object on which we are setting values always behaves as a copy.\n",
            "\n",
            "For example, when doing 'df[col].method(value, inplace=True)', try using 'df.method({col: value}, inplace=True)' or df[col] = df[col].method(value) instead, to perform the operation inplace on the original object.\n",
            "\n",
            "\n",
            "  df['glucose'].fillna(df['glucose'].mean(),inplace=True)\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "male               0\n",
              "age                0\n",
              "currentSmoker      0\n",
              "cigsPerDay         0\n",
              "BPMeds             0\n",
              "prevalentStroke    0\n",
              "prevalentHyp       0\n",
              "diabetes           0\n",
              "totChol            0\n",
              "sysBP              0\n",
              "diaBP              0\n",
              "BMI                0\n",
              "heartRate          0\n",
              "glucose            0\n",
              "TenYearCHD         0\n",
              "dtype: int64"
            ],
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>0</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>male</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>age</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>currentSmoker</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>cigsPerDay</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>BPMeds</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>prevalentStroke</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>prevalentHyp</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>diabetes</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>totChol</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>sysBP</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>diaBP</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>BMI</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>heartRate</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>glucose</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>TenYearCHD</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div><br><label><b>dtype:</b> int64</label>"
            ]
          },
          "metadata": {},
          "execution_count": 234
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "x=df.iloc[:,:-1]\n",
        "y=df.iloc[:,-1]\n",
        "\n",
        "x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.2,random_state=42)\n",
        "\n",
        "scaler=StandardScaler()\n",
        "x_train=scaler.fit_transform(x_train)\n",
        "x_test=scaler.transform(x_test)"
      ],
      "metadata": {
        "id": "kt09xoXTcvnj"
      },
      "execution_count": 235,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "model = LogisticRegression()\n",
        "from sklearn.model_selection import GridSearchCV\n",
        "param_grid = {'C': [0.001, 0.01, 0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8, 1,2,3,4,5,6,7,8, 10, 100, 1000],'penalty':['l1','l2'],'solver':['liblinear','saga']}\n",
        "grid = GridSearchCV(model, param_grid, cv=5)\n",
        "grid.fit(x_train, y_train)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 164
        },
        "id": "ZRTD8W23xJsB",
        "outputId": "62fae4de-cb0a-43e2-b12e-1eac94442342"
      },
      "execution_count": 236,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "GridSearchCV(cv=5, estimator=LogisticRegression(),\n",
              "             param_grid={'C': [0.001, 0.01, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7,\n",
              "                               0.8, 1, 2, 3, 4, 5, 6, 7, 8, 10, 100, 1000],\n",
              "                         'penalty': ['l1', 'l2'],\n",
              "                         'solver': ['liblinear', 'saga']})"
            ],
            "text/html": [
              "<style>#sk-container-id-12 {\n",
              "  /* Definition of color scheme common for light and dark mode */\n",
              "  --sklearn-color-text: #000;\n",
              "  --sklearn-color-text-muted: #666;\n",
              "  --sklearn-color-line: gray;\n",
              "  /* Definition of color scheme for unfitted estimators */\n",
              "  --sklearn-color-unfitted-level-0: #fff5e6;\n",
              "  --sklearn-color-unfitted-level-1: #f6e4d2;\n",
              "  --sklearn-color-unfitted-level-2: #ffe0b3;\n",
              "  --sklearn-color-unfitted-level-3: chocolate;\n",
              "  /* Definition of color scheme for fitted estimators */\n",
              "  --sklearn-color-fitted-level-0: #f0f8ff;\n",
              "  --sklearn-color-fitted-level-1: #d4ebff;\n",
              "  --sklearn-color-fitted-level-2: #b3dbfd;\n",
              "  --sklearn-color-fitted-level-3: cornflowerblue;\n",
              "\n",
              "  /* Specific color for light theme */\n",
              "  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
              "  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n",
              "  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
              "  --sklearn-color-icon: #696969;\n",
              "\n",
              "  @media (prefers-color-scheme: dark) {\n",
              "    /* Redefinition of color scheme for dark theme */\n",
              "    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
              "    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n",
              "    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
              "    --sklearn-color-icon: #878787;\n",
              "  }\n",
              "}\n",
              "\n",
              "#sk-container-id-12 {\n",
              "  color: var(--sklearn-color-text);\n",
              "}\n",
              "\n",
              "#sk-container-id-12 pre {\n",
              "  padding: 0;\n",
              "}\n",
              "\n",
              "#sk-container-id-12 input.sk-hidden--visually {\n",
              "  border: 0;\n",
              "  clip: rect(1px 1px 1px 1px);\n",
              "  clip: rect(1px, 1px, 1px, 1px);\n",
              "  height: 1px;\n",
              "  margin: -1px;\n",
              "  overflow: hidden;\n",
              "  padding: 0;\n",
              "  position: absolute;\n",
              "  width: 1px;\n",
              "}\n",
              "\n",
              "#sk-container-id-12 div.sk-dashed-wrapped {\n",
              "  border: 1px dashed var(--sklearn-color-line);\n",
              "  margin: 0 0.4em 0.5em 0.4em;\n",
              "  box-sizing: border-box;\n",
              "  padding-bottom: 0.4em;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "}\n",
              "\n",
              "#sk-container-id-12 div.sk-container {\n",
              "  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n",
              "     but bootstrap.min.css set `[hidden] { display: none !important; }`\n",
              "     so we also need the `!important` here to be able to override the\n",
              "     default hidden behavior on the sphinx rendered scikit-learn.org.\n",
              "     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n",
              "  display: inline-block !important;\n",
              "  position: relative;\n",
              "}\n",
              "\n",
              "#sk-container-id-12 div.sk-text-repr-fallback {\n",
              "  display: none;\n",
              "}\n",
              "\n",
              "div.sk-parallel-item,\n",
              "div.sk-serial,\n",
              "div.sk-item {\n",
              "  /* draw centered vertical line to link estimators */\n",
              "  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n",
              "  background-size: 2px 100%;\n",
              "  background-repeat: no-repeat;\n",
              "  background-position: center center;\n",
              "}\n",
              "\n",
              "/* Parallel-specific style estimator block */\n",
              "\n",
              "#sk-container-id-12 div.sk-parallel-item::after {\n",
              "  content: \"\";\n",
              "  width: 100%;\n",
              "  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n",
              "  flex-grow: 1;\n",
              "}\n",
              "\n",
              "#sk-container-id-12 div.sk-parallel {\n",
              "  display: flex;\n",
              "  align-items: stretch;\n",
              "  justify-content: center;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  position: relative;\n",
              "}\n",
              "\n",
              "#sk-container-id-12 div.sk-parallel-item {\n",
              "  display: flex;\n",
              "  flex-direction: column;\n",
              "}\n",
              "\n",
              "#sk-container-id-12 div.sk-parallel-item:first-child::after {\n",
              "  align-self: flex-end;\n",
              "  width: 50%;\n",
              "}\n",
              "\n",
              "#sk-container-id-12 div.sk-parallel-item:last-child::after {\n",
              "  align-self: flex-start;\n",
              "  width: 50%;\n",
              "}\n",
              "\n",
              "#sk-container-id-12 div.sk-parallel-item:only-child::after {\n",
              "  width: 0;\n",
              "}\n",
              "\n",
              "/* Serial-specific style estimator block */\n",
              "\n",
              "#sk-container-id-12 div.sk-serial {\n",
              "  display: flex;\n",
              "  flex-direction: column;\n",
              "  align-items: center;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  padding-right: 1em;\n",
              "  padding-left: 1em;\n",
              "}\n",
              "\n",
              "\n",
              "/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\n",
              "clickable and can be expanded/collapsed.\n",
              "- Pipeline and ColumnTransformer use this feature and define the default style\n",
              "- Estimators will overwrite some part of the style using the `sk-estimator` class\n",
              "*/\n",
              "\n",
              "/* Pipeline and ColumnTransformer style (default) */\n",
              "\n",
              "#sk-container-id-12 div.sk-toggleable {\n",
              "  /* Default theme specific background. It is overwritten whether we have a\n",
              "  specific estimator or a Pipeline/ColumnTransformer */\n",
              "  background-color: var(--sklearn-color-background);\n",
              "}\n",
              "\n",
              "/* Toggleable label */\n",
              "#sk-container-id-12 label.sk-toggleable__label {\n",
              "  cursor: pointer;\n",
              "  display: flex;\n",
              "  width: 100%;\n",
              "  margin-bottom: 0;\n",
              "  padding: 0.5em;\n",
              "  box-sizing: border-box;\n",
              "  text-align: center;\n",
              "  align-items: start;\n",
              "  justify-content: space-between;\n",
              "  gap: 0.5em;\n",
              "}\n",
              "\n",
              "#sk-container-id-12 label.sk-toggleable__label .caption {\n",
              "  font-size: 0.6rem;\n",
              "  font-weight: lighter;\n",
              "  color: var(--sklearn-color-text-muted);\n",
              "}\n",
              "\n",
              "#sk-container-id-12 label.sk-toggleable__label-arrow:before {\n",
              "  /* Arrow on the left of the label */\n",
              "  content: \"▸\";\n",
              "  float: left;\n",
              "  margin-right: 0.25em;\n",
              "  color: var(--sklearn-color-icon);\n",
              "}\n",
              "\n",
              "#sk-container-id-12 label.sk-toggleable__label-arrow:hover:before {\n",
              "  color: var(--sklearn-color-text);\n",
              "}\n",
              "\n",
              "/* Toggleable content - dropdown */\n",
              "\n",
              "#sk-container-id-12 div.sk-toggleable__content {\n",
              "  max-height: 0;\n",
              "  max-width: 0;\n",
              "  overflow: hidden;\n",
              "  text-align: left;\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-12 div.sk-toggleable__content.fitted {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-12 div.sk-toggleable__content pre {\n",
              "  margin: 0.2em;\n",
              "  border-radius: 0.25em;\n",
              "  color: var(--sklearn-color-text);\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-12 div.sk-toggleable__content.fitted pre {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-12 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n",
              "  /* Expand drop-down */\n",
              "  max-height: 200px;\n",
              "  max-width: 100%;\n",
              "  overflow: auto;\n",
              "}\n",
              "\n",
              "#sk-container-id-12 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n",
              "  content: \"▾\";\n",
              "}\n",
              "\n",
              "/* Pipeline/ColumnTransformer-specific style */\n",
              "\n",
              "#sk-container-id-12 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  color: var(--sklearn-color-text);\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-12 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "/* Estimator-specific style */\n",
              "\n",
              "/* Colorize estimator box */\n",
              "#sk-container-id-12 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-12 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-12 div.sk-label label.sk-toggleable__label,\n",
              "#sk-container-id-12 div.sk-label label {\n",
              "  /* The background is the default theme color */\n",
              "  color: var(--sklearn-color-text-on-default-background);\n",
              "}\n",
              "\n",
              "/* On hover, darken the color of the background */\n",
              "#sk-container-id-12 div.sk-label:hover label.sk-toggleable__label {\n",
              "  color: var(--sklearn-color-text);\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "/* Label box, darken color on hover, fitted */\n",
              "#sk-container-id-12 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n",
              "  color: var(--sklearn-color-text);\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "/* Estimator label */\n",
              "\n",
              "#sk-container-id-12 div.sk-label label {\n",
              "  font-family: monospace;\n",
              "  font-weight: bold;\n",
              "  display: inline-block;\n",
              "  line-height: 1.2em;\n",
              "}\n",
              "\n",
              "#sk-container-id-12 div.sk-label-container {\n",
              "  text-align: center;\n",
              "}\n",
              "\n",
              "/* Estimator-specific */\n",
              "#sk-container-id-12 div.sk-estimator {\n",
              "  font-family: monospace;\n",
              "  border: 1px dotted var(--sklearn-color-border-box);\n",
              "  border-radius: 0.25em;\n",
              "  box-sizing: border-box;\n",
              "  margin-bottom: 0.5em;\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-12 div.sk-estimator.fitted {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-0);\n",
              "}\n",
              "\n",
              "/* on hover */\n",
              "#sk-container-id-12 div.sk-estimator:hover {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-12 div.sk-estimator.fitted:hover {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "/* Specification for estimator info (e.g. \"i\" and \"?\") */\n",
              "\n",
              "/* Common style for \"i\" and \"?\" */\n",
              "\n",
              ".sk-estimator-doc-link,\n",
              "a:link.sk-estimator-doc-link,\n",
              "a:visited.sk-estimator-doc-link {\n",
              "  float: right;\n",
              "  font-size: smaller;\n",
              "  line-height: 1em;\n",
              "  font-family: monospace;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  border-radius: 1em;\n",
              "  height: 1em;\n",
              "  width: 1em;\n",
              "  text-decoration: none !important;\n",
              "  margin-left: 0.5em;\n",
              "  text-align: center;\n",
              "  /* unfitted */\n",
              "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
              "  color: var(--sklearn-color-unfitted-level-1);\n",
              "}\n",
              "\n",
              ".sk-estimator-doc-link.fitted,\n",
              "a:link.sk-estimator-doc-link.fitted,\n",
              "a:visited.sk-estimator-doc-link.fitted {\n",
              "  /* fitted */\n",
              "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
              "  color: var(--sklearn-color-fitted-level-1);\n",
              "}\n",
              "\n",
              "/* On hover */\n",
              "div.sk-estimator:hover .sk-estimator-doc-link:hover,\n",
              ".sk-estimator-doc-link:hover,\n",
              "div.sk-label-container:hover .sk-estimator-doc-link:hover,\n",
              ".sk-estimator-doc-link:hover {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-3);\n",
              "  color: var(--sklearn-color-background);\n",
              "  text-decoration: none;\n",
              "}\n",
              "\n",
              "div.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n",
              ".sk-estimator-doc-link.fitted:hover,\n",
              "div.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n",
              ".sk-estimator-doc-link.fitted:hover {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-3);\n",
              "  color: var(--sklearn-color-background);\n",
              "  text-decoration: none;\n",
              "}\n",
              "\n",
              "/* Span, style for the box shown on hovering the info icon */\n",
              ".sk-estimator-doc-link span {\n",
              "  display: none;\n",
              "  z-index: 9999;\n",
              "  position: relative;\n",
              "  font-weight: normal;\n",
              "  right: .2ex;\n",
              "  padding: .5ex;\n",
              "  margin: .5ex;\n",
              "  width: min-content;\n",
              "  min-width: 20ex;\n",
              "  max-width: 50ex;\n",
              "  color: var(--sklearn-color-text);\n",
              "  box-shadow: 2pt 2pt 4pt #999;\n",
              "  /* unfitted */\n",
              "  background: var(--sklearn-color-unfitted-level-0);\n",
              "  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n",
              "}\n",
              "\n",
              ".sk-estimator-doc-link.fitted span {\n",
              "  /* fitted */\n",
              "  background: var(--sklearn-color-fitted-level-0);\n",
              "  border: var(--sklearn-color-fitted-level-3);\n",
              "}\n",
              "\n",
              ".sk-estimator-doc-link:hover span {\n",
              "  display: block;\n",
              "}\n",
              "\n",
              "/* \"?\"-specific style due to the `<a>` HTML tag */\n",
              "\n",
              "#sk-container-id-12 a.estimator_doc_link {\n",
              "  float: right;\n",
              "  font-size: 1rem;\n",
              "  line-height: 1em;\n",
              "  font-family: monospace;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  border-radius: 1rem;\n",
              "  height: 1rem;\n",
              "  width: 1rem;\n",
              "  text-decoration: none;\n",
              "  /* unfitted */\n",
              "  color: var(--sklearn-color-unfitted-level-1);\n",
              "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
              "}\n",
              "\n",
              "#sk-container-id-12 a.estimator_doc_link.fitted {\n",
              "  /* fitted */\n",
              "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
              "  color: var(--sklearn-color-fitted-level-1);\n",
              "}\n",
              "\n",
              "/* On hover */\n",
              "#sk-container-id-12 a.estimator_doc_link:hover {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-3);\n",
              "  color: var(--sklearn-color-background);\n",
              "  text-decoration: none;\n",
              "}\n",
              "\n",
              "#sk-container-id-12 a.estimator_doc_link.fitted:hover {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-3);\n",
              "}\n",
              "</style><div id=\"sk-container-id-12\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>GridSearchCV(cv=5, estimator=LogisticRegression(),\n",
              "             param_grid={&#x27;C&#x27;: [0.001, 0.01, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7,\n",
              "                               0.8, 1, 2, 3, 4, 5, 6, 7, 8, 10, 100, 1000],\n",
              "                         &#x27;penalty&#x27;: [&#x27;l1&#x27;, &#x27;l2&#x27;],\n",
              "                         &#x27;solver&#x27;: [&#x27;liblinear&#x27;, &#x27;saga&#x27;]})</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item sk-dashed-wrapped\"><div class=\"sk-label-container\"><div class=\"sk-label fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-28\" type=\"checkbox\" ><label for=\"sk-estimator-id-28\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow\"><div><div>GridSearchCV</div></div><div><a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.6/modules/generated/sklearn.model_selection.GridSearchCV.html\">?<span>Documentation for GridSearchCV</span></a><span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></div></label><div class=\"sk-toggleable__content fitted\"><pre>GridSearchCV(cv=5, estimator=LogisticRegression(),\n",
              "             param_grid={&#x27;C&#x27;: [0.001, 0.01, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7,\n",
              "                               0.8, 1, 2, 3, 4, 5, 6, 7, 8, 10, 100, 1000],\n",
              "                         &#x27;penalty&#x27;: [&#x27;l1&#x27;, &#x27;l2&#x27;],\n",
              "                         &#x27;solver&#x27;: [&#x27;liblinear&#x27;, &#x27;saga&#x27;]})</pre></div> </div></div><div class=\"sk-parallel\"><div class=\"sk-parallel-item\"><div class=\"sk-item\"><div class=\"sk-label-container\"><div class=\"sk-label fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-29\" type=\"checkbox\" ><label for=\"sk-estimator-id-29\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow\"><div><div>best_estimator_: LogisticRegression</div></div></label><div class=\"sk-toggleable__content fitted\"><pre>LogisticRegression(C=0.7, penalty=&#x27;l1&#x27;, solver=&#x27;liblinear&#x27;)</pre></div> </div></div><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-30\" type=\"checkbox\" ><label for=\"sk-estimator-id-30\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow\"><div><div>LogisticRegression</div></div><div><a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.6/modules/generated/sklearn.linear_model.LogisticRegression.html\">?<span>Documentation for LogisticRegression</span></a></div></label><div class=\"sk-toggleable__content fitted\"><pre>LogisticRegression(C=0.7, penalty=&#x27;l1&#x27;, solver=&#x27;liblinear&#x27;)</pre></div> </div></div></div></div></div></div></div></div></div>"
            ]
          },
          "metadata": {},
          "execution_count": 236
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(grid.best_params_)\n",
        "print(grid.best_score_)\n",
        "best = grid.best_estimator_\n",
        "y_pred = best.predict(x_test)\n",
        "print(accuracy_score(y_test, y_pred))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "CqCnDeY1ywyg",
        "outputId": "4b15bd2e-2dc1-46f0-af1c-af2ca7ab0e13"
      },
      "execution_count": 238,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "{'C': 0.7, 'penalty': 'l1', 'solver': 'liblinear'}\n",
            "0.8553735879664439\n",
            "0.8538647342995169\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "\n",
        "disp=ConfusionMatrixDisplay(confusion_matrix(y_test, y_pred),display_labels=['0','1'])\n",
        "disp.plot()\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 455
        },
        "id": "MjFQUmF56Ypk",
        "outputId": "bd21ca07-ba71-4612-c088-d813a114c88a"
      },
      "execution_count": 239,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 2 Axes>"
            ],
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAAfsAAAG2CAYAAAB4TS9gAAAAOnRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjEwLjAsIGh0dHBzOi8vbWF0cGxvdGxpYi5vcmcvlHJYcgAAAAlwSFlzAAAPYQAAD2EBqD+naQAAONJJREFUeJzt3Xt4VNXZ///P5AwkMyFIEiLhVI6pCAgWpp5QIxEpxUK1+qBGRPxJAyoUVL7ljBqLByiKUBUJtFA8VKmkiiLKQQkgQSwCRlFsojBBG5OQ2Jxm9u8PmqkjqJnMTIaZ/X5d174us/bae+55npQ791pr72UxDMMQAAAIWxHBDgAAAAQWyR4AgDBHsgcAIMyR7AEACHMkewAAwhzJHgCAMEeyBwAgzJHsAQAIcyR7AADCHMkeAIAwR7IHACAAunTpIovFcsqRk5MjSaqpqVFOTo7atWun+Ph4jRkzRqWlpR73KC4u1ogRI9S6dWslJydr+vTpamho8DoWkj0AAAHw7rvv6tixY+5j06ZNkqRrrrlGkjRlyhRt2LBBzz//vLZu3aqjR49q9OjR7uudTqdGjBihuro67dixQ6tWrVJeXp5mz57tdSwWNsIBACDw7rrrLuXn5+vjjz9WZWWl2rdvr7Vr1+rXv/61JOnDDz9Unz59VFBQoCFDhujVV1/VL37xCx09elQpKSmSpOXLl+uee+7Rl19+qZiYmCZ/dlRAvlELcblcOnr0qBISEmSxWIIdDgDAS4Zh6MSJE0pLS1NEROAGm2tqalRXV+fzfQzDOCXfxMbGKjY29gevq6ur01/+8hdNnTpVFotFhYWFqq+vV2ZmprtP79691alTJ3eyLygoUN++fd2JXpKysrI0ceJEHThwQAMGDGhy3CGd7I8ePar09PRghwEA8FFJSYk6duwYkHvX1NSoa+d4OY47fb5XfHy8qqqqPNrmzJmjuXPn/uB169evV3l5uW6++WZJksPhUExMjBITEz36paSkyOFwuPt8O9E3nm88542QTvYJCQmSpH/t7SJrPMsPEJ5+1bNvsEMAAqZB9Xpbr7j/PQ+Euro6OY479a/CLrImND9XVJ5wqfPAz1RSUiKr1epu/7GqXpJWrFih4cOHKy0trdmf74uQTvaNQynW+Aif/h8InMmiLNHBDgEInP+uGmuJqdj4BIviE5r/OS79N+dYrR7J/sf861//0htvvKEXX3zR3Zaamqq6ujqVl5d7VPelpaVKTU1199m9e7fHvRpX6zf2aSoyJADAFJyGy+ejOVauXKnk5GSNGDHC3TZw4EBFR0dr8+bN7raioiIVFxfLbrdLkux2u/bv36/jx4+7+2zatElWq1UZGRlexRDSlT0AAE3lkiGXmv8AWnOudblcWrlypbKzsxUV9b+Ua7PZNH78eE2dOlVJSUmyWq2aPHmy7Ha7hgwZIkkaNmyYMjIydOONN2rhwoVyOByaOXOmcnJymjR18G0kewAAAuSNN95QcXGxbrnlllPOLVq0SBERERozZoxqa2uVlZWlJ554wn0+MjJS+fn5mjhxoux2u9q0aaPs7GzNnz/f6zhC+jn7yspK2Ww2ff1RN+bsEbay0voHOwQgYBqMem3R31VRUeHVPLg3GnPF0aKOPi/QS+v1eUBjDRQqewCAKTgNQ04f6ltfrg02ymEAAMIclT0AwBSCsUDvTEGyBwCYgkuGnCZN9gzjAwAQ5qjsAQCmwDA+AABhjtX4AAAgbFHZAwBMwfXfw5frQxXJHgBgCk4fV+P7cm2wkewBAKbgNE4evlwfqpizBwAgzFHZAwBMgTl7AADCnEsWOWXx6fpQxTA+AABhjsoeAGAKLuPk4cv1oYpkDwAwBaePw/i+XBtsDOMDABDmqOwBAKZg5sqeZA8AMAWXYZHL8GE1vg/XBhvD+AAAhDkqewCAKTCMDwBAmHMqQk4fBrSdfoylpZHsAQCmYPg4Z28wZw8AAM5UVPYAAFNgzh4AgDDnNCLkNHyYsw/h1+UyjA8AQJijsgcAmIJLFrl8qHFdCt3SnmQPADAFM8/ZM4wPAECYo7IHAJiC7wv0GMYHAOCMdnLO3oeNcBjGBwAAZyoqewCAKbh8fDc+q/EBADjDMWcPAECYcynCtM/ZM2cPAECYo7IHAJiC07DI6cM2tb5cG2wkewCAKTh9XKDnZBgfAACcqajsAQCm4DIi5PJhNb4rhFfjU9kDAEyhcRjfl8NbX3zxhW644Qa1a9dOrVq1Ut++fbVnzx73ecMwNHv2bHXo0EGtWrVSZmamPv74Y497lJWVaezYsbJarUpMTNT48eNVVVXlVRwkewAAAuDrr7/WBRdcoOjoaL366qs6ePCgHnnkEbVt29bdZ+HChVqyZImWL1+uXbt2qU2bNsrKylJNTY27z9ixY3XgwAFt2rRJ+fn52rZtm2677TavYmEYHwBgCi75tqLe5WX/P/zhD0pPT9fKlSvdbV27dnX/t2EYWrx4sWbOnKlRo0ZJklavXq2UlBStX79e1113nQ4dOqSNGzfq3Xff1aBBgyRJjz32mK666io9/PDDSktLa1IsVPYAAFNofKmOL4ckVVZWehy1tbWn/byXX35ZgwYN0jXXXKPk5GQNGDBATz31lPv8kSNH5HA4lJmZ6W6z2WwaPHiwCgoKJEkFBQVKTEx0J3pJyszMVEREhHbt2tXk706yBwDAC+np6bLZbO4jNzf3tP0+/fRTLVu2TD169NBrr72miRMn6o477tCqVaskSQ6HQ5KUkpLicV1KSor7nMPhUHJyssf5qKgoJSUlufs0BcP4AABT8P3d+CevLSkpkdVqdbfHxsaetr/L5dKgQYP0wAMPSJIGDBigDz74QMuXL1d2dnaz42gOKnsAgCk07mfvyyFJVqvV4/i+ZN+hQwdlZGR4tPXp00fFxcWSpNTUVElSaWmpR5/S0lL3udTUVB0/ftzjfENDg8rKytx9moJkDwAwhcbK3pfDGxdccIGKioo82j766CN17txZ0snFeqmpqdq8ebP7fGVlpXbt2iW73S5JstvtKi8vV2FhobvPm2++KZfLpcGDBzc5FobxAQAIgClTpujnP/+5HnjgAV177bXavXu3nnzyST355JOSJIvForvuukv33XefevTooa5du2rWrFlKS0vT1VdfLenkSMCVV16pCRMmaPny5aqvr9ekSZN03XXXNXklvkSyBwCYhO/vxvfu2vPPP18vvfSSZsyYofnz56tr165avHixxo4d6+5z9913q7q6WrfddpvKy8t14YUXauPGjYqLi3P3WbNmjSZNmqTLL79cERERGjNmjJYsWeJVLBbDCN33/1VWVspms+nrj7rJmsCMBMJTVlr/YIcABEyDUa8t+rsqKio8Fr35U2OuWPjuRWoV3/wa9z9VDbr7/O0BjTVQyJAAAIQ5hvEBAKbg8nEY3xXC9THJHgBgCr7vehe6yT50IwcAAE1CZQ8AMAWnLHKq+Rvh+HJtsJHsAQCmwDA+AAAIW1T2AABTcMq3oXin/0JpcSR7AIApmHkYn2QPADAFf21xG4pCN3IAANAkVPYAAFMwvrUnfXOvD1UkewCAKTCMDwAAwhaVPQDAFFyGRS6j+UPxvlwbbCR7AIApOH3c9c6Xa4MtdCMHAABNQmUPADAFhvEBAAhzLkXI5cOAti/XBlvoRg4AAJqEyh4AYApOwyKnD0PxvlwbbCR7AIApMGcPAECYM3zc9c7gDXoAAOBMRWUPADAFpyxy+rCZjS/XBhvJHgBgCi7Dt3l3l+HHYFoYw/gAAIQ5Knvopp9lqPTzmFPaR2Z/qUm5X6iuxqIn56Vpy8ttVV9r0cChJzQ593O1bd/g7nv882g9NqOj3n8nQXFtnLrimq91y/87qkh+wxBCRt78lX498biS2jfo04Ot9MTMs1W0r3Www4KfuHxcoOfLtcF2RkS+dOlSdenSRXFxcRo8eLB2794d7JBMZcmrRfrrvg/cR+66w5Kki0ZWSJKWzz1bOzfZNPNPn+nhFw+rrDRa88d3cV/vdEqzbuqm+roILXr5Y03/Y7E2PZekVQ91CMbXAZrlkl9+rdvmHNWaR1OVk9VTnx6M0/1rP5WtXX2wQ4OfuGTx+QhVQU/2zz77rKZOnao5c+Zo79696tevn7KysnT8+PFgh2Yaie2cSkpucB+73rCpQ5danWuvUnVlhF77a5L+v7lfqP+FVepx7n809dFiHdwTr0OFJyuevVsTVPxRnO55/F/6yTn/0fmXndBNdx/ThryzVF8Xuv/jgLmMvu0rbVybpNefTVLxx3Fack9H1f7Hoqzry4IdGuCzoCf7Rx99VBMmTNC4ceOUkZGh5cuXq3Xr1nrmmWeCHZop1ddZ9Obf2irrun/LYpE+/mdrNdRHaMBFVe4+nXrUKvnsOh0qbCNJOrinjbr0rvEY1h809IS+ORGpfxXFtfh3ALwVFe1Sj3O/0d7tCe42w7Dove0Jyhj4TRAjgz81vkHPlyNUBTXZ19XVqbCwUJmZme62iIgIZWZmqqCgIIiRmdeOjTZVVUZq2LUnq5my41GKjnEp3ub06JfYvl5lx09OyH/9ZZTatvcc6kw8q959DjjTWZOcioySyr/z+/r1V1Eef8QitDXO2ftyhKqg/kv81Vdfyel0KiUlxaM9JSVFH3744Sn9a2trVVtb6/65srIy4DGazWt/TdL5l1aqXSr/wAFAuAipP1Nyc3Nls9ncR3p6erBDCiuln0frve0JuvL//u1uS0puUH1dhKoqIj36ln8ZraTkk38QtG3foK+/jPY8/1W0+xxwpqssi5SzQUr8zu9r27MaGJ0KIy5Z3O/Hb9bBAr3mOeussxQZGanS0lKP9tLSUqWmpp7Sf8aMGaqoqHAfJSUlLRWqKby+rp0Sz2rQ4Mz/jZj0OPcbRUW79N7b8e62ksOxOv5FjPoMrJYkZQyq1mcfxqn8q//9o7h3W4JaJzjVqWdNy30BoJka6iP08T9ba8CFJ9xtFouh/hdW6WAhj96FC8PHlfgGyb55YmJiNHDgQG3evNnd5nK5tHnzZtnt9lP6x8bGymq1ehzwD5dLev3ZJGVeU+bxbHwbq0tZ15fpyblna9878fr4n630yJRO6jOwWn3+u3DpvEtOqFPPGi2c3EmfHIjTni0JyvtDqkbe/JViYkP4lVMwlRefPEvD/69MmdeUKb17jSY/+LniWrv0+rqkYIcGP/Gpqvdxx7xgC/r41NSpU5Wdna1BgwbpZz/7mRYvXqzq6mqNGzcu2KGZynvbEnT8ixhlXXfqY0a3z/1CERZDCyZ0UX2tRYOGntCk3M/d5yMjpfmrP9Vj96ZrysieimvtUuY1ZcqefqwlvwLgk60vt5WtnVM3TXeobfsGfXqglX4/tqt7SgoIZRbDMIJeej3++ON66KGH5HA41L9/fy1ZskSDBw/+0esqKytls9n09UfdZE0IqeUHQJNlpfUPdghAwDQY9dqiv6uioiJgo7WNueJXm8Ypus2pbwttqvrqOr10xcqAxhooQa/sJWnSpEmaNGlSsMMAAIQxX4fiQ3kYn3IYAIAwd0ZU9gAABJqv77cP5UfvSPYAAFNgGB8AAPjV3LlzZbFYPI7evXu7z9fU1CgnJ0ft2rVTfHy8xowZc8p7Z4qLizVixAi1bt1aycnJmj59uhoavH9ZGZU9AMAUglHZ//SnP9Ubb7zh/jkq6n9pd8qUKfrHP/6h559/XjabTZMmTdLo0aP1zjvvSJKcTqdGjBih1NRU7dixQ8eOHdNNN92k6OhoPfDAA17FQbIHAJhCMJJ9VFTUad8IW1FRoRUrVmjt2rW67LLLJEkrV65Unz59tHPnTg0ZMkSvv/66Dh48qDfeeEMpKSnq37+/FixYoHvuuUdz585VTEzTHyNkGB8AAC9UVlZ6HN/eoO27Pv74Y6Wlpalbt24aO3asiouLJUmFhYWqr6/32PW1d+/e6tSpk3vX14KCAvXt29djs7isrCxVVlbqwIEDXsVMsgcAmIK/Xpebnp7usSlbbm7uaT9v8ODBysvL08aNG7Vs2TIdOXJEF110kU6cOCGHw6GYmBglJiZ6XJOSkiKHwyFJcjgcp90VtvGcNxjGBwCYgiHfHp9rfN1sSUmJxxv0YmNjT9t/+PDh7v8+99xzNXjwYHXu3FnPPfecWrVq1ew4moPKHgBgCv6q7L+7Idv3JfvvSkxMVM+ePXX48GGlpqaqrq5O5eXlHn2+vetramrqaXeFbTznDZI9AAAtoKqqSp988ok6dOiggQMHKjo62mPX16KiIhUXF7t3fbXb7dq/f7+OHz/u7rNp0yZZrVZlZGR49dkM4wMATKGlV+NPmzZNI0eOVOfOnXX06FHNmTNHkZGRuv7662Wz2TR+/HhNnTpVSUlJslqtmjx5sux2u4YMGSJJGjZsmDIyMnTjjTdq4cKFcjgcmjlzpnJycpo8mtCIZA8AMIWWTvaff/65rr/+ev373/9W+/btdeGFF2rnzp1q3769JGnRokWKiIjQmDFjVFtbq6ysLD3xxBPu6yMjI5Wfn6+JEyfKbrerTZs2ys7O1vz5872OnWQPAEAArFu37gfPx8XFaenSpVq6dOn39uncubNeeeUVn2Mh2QMATMHM78Yn2QMATMEwLDJ8SNi+XBtsrMYHACDMUdkDAEyB/ewBAAhzZp6zZxgfAIAwR2UPADAFMy/QI9kDAEzBzMP4JHsAgCmYubJnzh4AgDBHZQ8AMAXDx2H8UK7sSfYAAFMwJBmGb9eHKobxAQAIc1T2AABTcMkiC2/QAwAgfLEaHwAAhC0qewCAKbgMiyy8VAcAgPBlGD6uxg/h5fgM4wMAEOao7AEApmDmBXokewCAKZDsAQAIc2ZeoMecPQAAYY7KHgBgCmZejU+yBwCYwslk78ucvR+DaWEM4wMAEOao7AEApsBqfAAAwpwh3/akD+FRfIbxAQAId1T2AABTYBgfAIBwZ+JxfJI9AMAcfKzsFcKVPXP2AACEOSp7AIAp8AY9AADCnJkX6DGMDwBAmKOyBwCYg2HxbZFdCFf2JHsAgCmYec6eYXwAAMIclT0AwBx4qc4Pe/nll5t8w1/+8pfNDgYAgEAx82r8JiX7q6++ukk3s1gscjqdvsQDAEDYefDBBzVjxgzdeeedWrx4sSSppqZGv/vd77Ru3TrV1tYqKytLTzzxhFJSUtzXFRcXa+LEiXrrrbcUHx+v7Oxs5ebmKirKu4H5Js3Zu1yuJh0kegDAGc3w4Wimd999V3/605907rnnerRPmTJFGzZs0PPPP6+tW7fq6NGjGj16tPu80+nUiBEjVFdXpx07dmjVqlXKy8vT7NmzvY7BpwV6NTU1vlwOAECLaRzG9+XwVlVVlcaOHaunnnpKbdu2dbdXVFRoxYoVevTRR3XZZZdp4MCBWrlypXbs2KGdO3dKkl5//XUdPHhQf/nLX9S/f38NHz5cCxYs0NKlS1VXV+dVHF4ne6fTqQULFujss89WfHy8Pv30U0nSrFmztGLFCm9vBwBAy/Clqm9mdZ+Tk6MRI0YoMzPTo72wsFD19fUe7b1791anTp1UUFAgSSooKFDfvn09hvWzsrJUWVmpAwcOeBWH18n+/vvvV15enhYuXKiYmBh3+znnnKOnn37a29sBABBSKisrPY7a2trT9lu3bp327t2r3NzcU845HA7FxMQoMTHRoz0lJUUOh8Pd59uJvvF84zlveJ3sV69erSeffFJjx45VZGSku71fv3768MMPvb0dAAAtxOKHQ0pPT5fNZnMfp0vmJSUluvPOO7VmzRrFxcUF+ov9KK+fs//iiy/UvXv3U9pdLpfq6+v9EhQAAH7np+fsS0pKZLVa3c2xsbGndC0sLNTx48d13nnnuducTqe2bdumxx9/XK+99prq6upUXl7uUd2XlpYqNTVVkpSamqrdu3d73Le0tNR9zhteV/YZGRnavn37Ke0vvPCCBgwY4O3tAAAIKVar1eM4XbK//PLLtX//fu3bt899DBo0SGPHjnX/d3R0tDZv3uy+pqioSMXFxbLb7ZIku92u/fv36/jx4+4+mzZtktVqVUZGhlcxe13Zz549W9nZ2friiy/kcrn04osvqqioSKtXr1Z+fr63twMAoGW04Bv0EhISdM4553i0tWnTRu3atXO3jx8/XlOnTlVSUpKsVqsmT54su92uIUOGSJKGDRumjIwM3XjjjVq4cKEcDodmzpypnJyc0/6B8UO8ruxHjRqlDRs26I033lCbNm00e/ZsHTp0SBs2bNAVV1zh7e0AAGgZjbve+XL40aJFi/SLX/xCY8aM0cUXX6zU1FS9+OKL7vORkZHKz89XZGSk7Ha7brjhBt10002aP3++159lMYzQ3censrJSNptNX3/UTdYE9vRBeMpK6x/sEICAaTDqtUV/V0VFhcc8uD815or0pfMU0ar5i+Vc/6lRSc6cgMYaKM3eCGfPnj06dOiQpJPz+AMHDvRbUAAA+JuZt7j1Otl//vnnuv766/XOO++4VxCWl5fr5z//udatW6eOHTv6O0YAAHxn4l3vvB77vvXWW1VfX69Dhw6prKxMZWVlOnTokFwul2699dZAxAgAAHzgdWW/detW7dixQ7169XK39erVS4899pguuugivwYHAIDf+LrILty3uP229PT00748x+l0Ki0tzS9BAQDgbxbj5OHL9aHK62H8hx56SJMnT9aePXvcbXv27NGdd96phx9+2K/BAQDgN0HYCOdM0aTKvm3btrJY/jd8UV1drcGDBysq6uTlDQ0NioqK0i233KKrr746IIECAIDmaVKyX7x4cYDDAAAgwJiz/2HZ2dmBjgMAgMAy8aN3zX6pjiTV1NSorq7Ooy3U3ioEAEC483qBXnV1tSZNmqTk5GS1adNGbdu29TgAADgjmXiBntfJ/u6779abb76pZcuWKTY2Vk8//bTmzZuntLQ0rV69OhAxAgDgOxMne6+H8Tds2KDVq1dr6NChGjdunC666CJ1795dnTt31po1azR27NhAxAkAAJrJ68q+rKxM3bp1k3Ryfr6srEySdOGFF2rbtm3+jQ4AAH85w7a4bUleJ/tu3brpyJEjkqTevXvrueeek3Sy4m/cGAcAgDNN4xv0fDlCldfJfty4cXr//fclSffee6+WLl2quLg4TZkyRdOnT/d7gAAAwDdez9lPmTLF/d+ZmZn68MMPVVhYqO7du+vcc8/1a3AAAPgNz9k3X+fOndW5c2d/xAIAAAKgScl+yZIlTb7hHXfc0exgAAAIFIt83PXOb5G0vCYl+0WLFjXpZhaLhWQPAMAZpknJvnH1/Znq6huvV1RUXLDDAALCEvFBsEMAAsdwSa6W+iw2wgEAILyZeIGe14/eAQCA0EJlDwAwBxNX9iR7AIAp+PoWPFO9QQ8AAISWZiX77du364YbbpDdbtcXX3whSfrzn/+st99+26/BAQDgNybe4tbrZP+3v/1NWVlZatWqld577z3V1tZKkioqKvTAAw/4PUAAAPyCZN909913n5YvX66nnnpK0dHR7vYLLrhAe/fu9WtwAADAd14v0CsqKtLFF198SrvNZlN5ebk/YgIAwO9YoOeF1NRUHT58+JT2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DcMwjKKiIkOSsWnTptPG+dZbbxmSjK+//trdVlNTY7Ru3drYsWOHR9/x48cb119/vWEYhjFjxgwjIyPD4/w999xzyr2+S5Lx0ksvfe/5hx56yBg4cKD75zlz5hiRkZHG559/7m579dVXjYiICOPYsWOGYRjGT37yE2Pt2rUe91mwYIFht9sNwzCMI0eOGJKM995773s/F0BgMWePsJWfn6/4+HjV19fL5XLp//7v/zR37lz3+b59+3rM07///vs6fPiwEhISPO5TU1OjTz75RBUVFTp27JjHtr5RUVEaNGjQKUP5jfbt26fIyEhdcsklTY778OHD+uabb3TFFVd4tNfV1WnAgAGSpEOHDp2yvbDdbm/yZzR69tlntWTJEn3yySeqqqpSQ0ODrFarR59OnTrp7LPP9vgcl8uloqIiJSQk6JNPPtH48eM1YcIEd5+GhgbZbDav4wEQGCR7hK1LL71Uy5YtU0xMjNLS0hQV5fnr3qZNG4+fq6qqNHDgQK1Zs+aUe7Vv375ZMbRq1crra6qqqiRJ//jHPzySrHRyHYK/FBQUaOzYsZo3b56ysrJks9m0bt06PfLII17H+tRTT53yx0dkZKTfYgXgG5I9wlabNm3UvXv3Jvc/77zz9Oyzzyo5OfmU6rZRhw4dtGvXLl188cWSTlawhYWFOu+8807bv2/fvnK5XNq6dasyMzNPOd84suB0Ot1tGRkZio2NVXFx8feOCPTp08e92LDRzp07f/xLfsuOHTvUuXNn/f73v3e3/etf/zqlX3FxsY4ePaq0tDT350RERKhXr15KSUlRWlqaPv30U40dO9arzwfQcligB/zX2LFjddZZZ2nUqFHavn27jhw5oi1btuiOO+7Q559/Lkm688479eCDD2r9+vX68MMP9dvf/vYHn5Hv0qWLsrOzdcstt2j9+vXuez733HOSpM6dO8tisSg/P19ffvmlqqqqlJCQoGnTpmnKlClatWqVPvnkE+3du1ePPfaYe9Hb7bffro8//ljTp09XUVGR1q5dq7y8PK++b48ePVRcXKx169bpk08+0ZIlS0672DAuLk7Z2dl6//33tX37dt1xxx269tprlZqaKkmaN2+ecnNztWTJEn300Ufav3+/Vq5cqUcffdSreAAEDske+K/WrVtr27Zt6tSpk0aPHq0+ffpo/PjxqqmpcVf6v/vd73TjjTcqOztbdrtdCQkJ+tWvfvWD9122bJl+/etf67e//a169+6tCRMmqLq6WpJ09tlna968ebr33nuVkpKiSZMmSZIWLFigWbNmKTc3V3369NGVV16pf/zjH+rataukk/Pof/vb37R+/Xr169dPy5cv1wMPPODV9/3lL3+pKVOmaNKkSerfv7927NihWbNmndKve/fuGj16tK666ioNGzZM5557rsejdbfeequefvpprVy5Un379tUll1yivLw8d6wAgs9ifN/KIgAAEBao7AEACHMkewAAwhzJHgCAMEeyBwAgzJHsAQAIcyR7AADCHMkeAIAwR7IHACDMkewBAAhzJHsAAMIcyR4AgDBHsgcAIMz9/5CRMY6+wWSNAAAAAElFTkSuQmCC\n"
          },
          "metadata": {}
        }
      ]
    }
  ]
}